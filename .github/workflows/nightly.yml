name: Deploy (after successful build and test)

on:
  push:
    branches:
    - test
  schedule:
    - cron: "0 0 * * *"

jobs:
  nightly:
    name: nightly deploy
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: medyan-dev/medyan
        token: ${{ secrets.MEDYAN_BOT_PAT_REPO }}
        path: medyan-nightly
        fetch-depth: 0
    - uses: actions/checkout@v3
      with:
        repository: medyan-dev/medyan-public
        path: medyan-public
        fetch-depth: 0

    - name: zip source
      working-directory: medyan-nightly
      run: |
        rm -rf .git .github c++tutorials docsdev papers restart
        cd .. && zip -r medyan-nightly.zip medyan-nightly

    - name: deploy source
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/medyan-dev/medyan-public/releases/80741266/assets{?name,label}
        release_id: 80741266
        asset_path: ./medyan-nightly.zip
        asset_name: medyan-nightly.zip
        asset_content_type: application/zip
        max_releases: 1

    - name: prepare build dependencies (ubuntu)
      working-directory: medyan-nightly
      run: |
        # Install apptainer.
        sudo apt-get update
        sudo apt-get install -y wget
        cd /tmp
        wget https://github.com/apptainer/apptainer/releases/download/v1.1.2/apptainer_1.1.2_amd64.deb
        sudo apt-get install -y ./apptainer_1.1.2_amd64.deb
        # Install singularity.
        sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libssl-dev \
          uuid-dev \
          libgpgme11-dev \
          squashfs-tools \
          libseccomp-dev \
          pkg-config
        export VERSION=1.11 OS=linux ARCH=amd64 && \
          wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && \
          sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && \
          rm go$VERSION.$OS-$ARCH.tar.gz
        echo 'export GOPATH=${HOME}/go' >> ~/.bashrc && \
          echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc && \
          source ~/.bashrc
        # go get -u github.com/golang/dep/cmd/dep
        export VERSION=3.0.3 && # adjust this as necessary \
          mkdir -p $GOPATH/src/github.com/sylabs && \
          cd $GOPATH/src/github.com/sylabs && \
          wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz && \
          tar -xzf singularity-${VERSION}.tar.gz && \
          cd ./singularity && \
          ./mconfig
        ./mconfig && \
          make -C ./builddir && \
          sudo make -C ./builddir install
        singularity version

    - name: build and test (ubuntu with apptainer)
      working-directory: medyan-public
      run: |
        cd apptainer && \
          apptainer build --writable-tmpfs medyan-nightly-avx2-novisual.sif medyan-nightly-avx2-novisual.def && \
          ls .

    - name: deploy container
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/medyan-dev/medyan-public/releases/80741266/assets{?name,label}
        release_id: 80741266
        asset_path: ./medyan-public/apptainer/medyan-nightly-avx2-novisual.sif
        asset_name: medyan-nightly-avx2-novisual.sif
        asset_content_type: application/octet-stream
        max_releases: 1
