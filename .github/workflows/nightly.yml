name: Deploy (after successful build and test)

on:
  push:
    branches:
    - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  nightly:
    name: nightly deploy
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: medyan-dev/medyan
        token: ${{ secrets.MEDYAN_BOT_PAT_REPO }}
        path: medyan
        fetch-depth: 0

    - name: prepare dependencies (windows)
      if: matrix.os == 'windows-latest'
      run: |
        .\medyan\conf.ps1
    - name: prepare dependencies (macos)
      if: matrix.os == 'macos-latest'
      working-directory: medyan
      run: |
        brew install pkg-config
        sed -i '' -e 's/-mtune=native -march=native/-mavx/g' CMakeLists.txt
        ./conf.sh

    - name: build (windows with MSBuild)
      if: matrix.os == 'windows-latest'
      working-directory: medyan
      run: |
        cd build
        & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" .\MEDYAN.sln /property:Configuration=Release /property:Platform=x64
        ls Release
    - name: build (macos with make)
      if: matrix.os == 'macos-latest'
      working-directory: medyan
      run: |
        cd build
        make VERBOSE=1
        ls build

    - name: run tests (windows)
      if: matrix.os == 'windows-latest'
      working-directory: medyan
      run: |
        .\build\Release\medyan.exe test
    - name: run tests (macos)
      if: matrix.os == 'macos-latest'
      working-directory: medyan
      run: |
        ./build/medyan test

    - name: bundle files (windows)
      if: matrix.os == 'windows-latest'
      working-directory: medyan
      run: |
        $compress = @{
          Path = ".\build\Release\medyan.exe"
          CompressionLevel = "Fastest"
          DestinationPath = ".\build\Release\medyan.zip"
        }
        Compress-Archive @compress
    - name: bundle files (macos)
      if: matrix.os == 'macos-latest'
      working-directory: medyan
      run: |
        cd build
        zip medyan.zip medyan

    - name: deploy release (windows)
      if: matrix.os == 'windows-latest'
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/medyan-dev/medyan-public/releases/65013247/assets{?name,label}
        release_id: 65013247
        asset_path: .\medyan\build\Release\medyan.zip
        asset_name: medyan-x86_64-win.zip
        asset_content_type: application/zip
        max_releases: 1
    - name: deploy release (macos)
      if: matrix.os == 'macos-latest'
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/medyan-dev/medyan-public/releases/65013247/assets{?name,label}
        release_id: 65013247
        asset_path: ./medyan/build/medyan.zip
        asset_name: medyan-x86_64-linux.zip
        asset_content_type: application/zip
        max_releases: 1
